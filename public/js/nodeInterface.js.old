
	
	
	
	socket.on('cpustats', function(data){
		if(loggedIn){			
			drawMem(data['totalMem'], data['freeMem']);
			drawAvgCpu(data['cpu']);
			drawCpu(data['cpu']);
			
			$(".rightDiv").show(length);
		}
	});
	
	var cpuArray = null;
	
	function drawCpu(cpus)
	{
		if(cpuArray == null){
			cpuArray = new Array();
			
			var i = 0;
			for(curr in cpus){
				cpuArray[i++] = RGraph.array_pad([], 60);
			}
		}
		
		RGraph.Clear(document.getElementById("cpu"));
		RGraph.ObjectRegistry.Clear();

		var line = new RGraph.Line('cpu', cpuArray);
		line.Set('chart.colors', ['black', 'blue', 'green', 'red']);
		line.Set('chart.linewidth', 1);
		line.Set('chart.filled', false);
		line.Set('chart.ymax', 100);
		line.Set('chart.numxticks', 10);
		line.Set('chart.ylabels.count', 3);
		line.Set('chart.title', 'CPU Usage (%)');
		line.Set('chart.labels', ['Now','60s']);
		line.Draw();
		
		for(var i = 0; i < cpuArray.length; i++){
			cpuArray[i] = [cpus['cpu' + (i + 1)]].concat(cpuArray[i]);
			cpuArray[i].pop();
		}
	}
	
	mem = RGraph.array_pad([], 60);
	function drawMem(total, free){
		RGraph.Clear(document.getElementById("mem"));
		RGraph.ObjectRegistry.Clear();
		
		var line = new RGraph.Line('mem', mem);
		line.Set('chart.colors', ['red']);
		line.Set('chart.linewidth', 2);
		line.Set('chart.filled', false);
		line.Set('chart.ymax', 100);
		line.Set('chart.numxticks', 6);
		line.Set('chart.ylabels.count', 3);
		line.Set('chart.title', 'Memory Usage (%)');
		line.Set('chart.labels', ['Now', Math.round((total - free) / (1024 * 1024)) + "/" + Math.round(total / (1024 * 1024)) + " MB", '60s']);
		line.Draw();
		
		mem = [Math.round(100 * ((total - free) / total))].concat(mem)
		mem.pop();
	}
	
	avgCpu = RGraph.array_pad([], 60);
	function drawAvgCpu(cpus){
		RGraph.Clear(document.getElementById("avgCpu"));
		RGraph.ObjectRegistry.Clear();
		
		var cputot = 0;
		var tot = 0;
		
		for(curr in cpus){
			cputot += cpus[curr];
			tot++;
		}
		
		cputot /= tot;
		
		
		var line = new RGraph.Line('avgCpu', avgCpu);
		line.Set('chart.colors', ['red']);
		line.Set('chart.linewidth', 2);
		line.Set('chart.filled', false);
		line.Set('chart.ymax', 100);
		line.Set('chart.numxticks', 6);
		line.Set('chart.ylabels.count', 3);
		line.Set('chart.title', 'Average CPU Usage (%)');
		line.Set('chart.labels', ['Now', cputot + "%", '60s']);
		line.Draw();
		
		avgCpu = [cputot].concat(avgCpu);
		avgCpu.pop();
	}
});